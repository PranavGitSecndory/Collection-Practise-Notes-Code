collection 
>Its like a container that can contain hold a hetrogeneous objects (through homehongenous us idealy recmmneded  (Generic cincept));

It can conatin only the obejects (even int,char,byte,doub;e) are converted to objects (know as autoboxing ))
we can manipulate objetcs from a collection 
Note:: In large Apps we can read data from teh db inject every record in to an object and it to the collection from local processing as it improves the performance of the application .

hetrogenous :: different types of data 4
homogenous :: same one type of data 

what is generic (JDK 1.5 onwards)



                                               Collection Hierarychy 
List                                   Set 
Allow sequential ordering of ele
duplicates are allowed 
use case ::  

      bank transaction
      telephone call logs 


domain ->helathcare .ecomerce website 
collection ->group of object 

list > allow duplicate and want sequential of transactions 

set > dont allow duplicate and order does not mandatory 

List interfcae can be classified into  types like :: arraylist and linked list,vector and stack 
      arraylist is default csapacity is 10 ig the arraylist is emepty 
       List l=new ArrayList(); //capacity 10 default 

toString()-> method converts the context of the object into readable format 

Assm1
write a program that reads the data from teh text file id name sal and put in the collection and on that basis calculate the sal and give hrm and carete a new tetx file and inserts in that file.

ASSM-2
                              A

               B                             c

      List<A> l=new AL<>();  if i pass the parent A as ref to generic then i can the B and C chjild class propwertis (The inheruatnce herrarchy will work ??)

ASSM-3

can i convert the arraylist to linked list 

----------------------Set--------------------------------- 

NOte in hashSet ::  whenver we are  cretung a set woith differnt address it add dupilcate such as 
emp1= new Emoplioyee(1,"java");
emp2=new Emoplioyee(2,"java");

it will take the duplicate for the   for the above two objects are crated but belwo when have the same wrpapper class object such as 
lhs2.add("cherry");
lhs2.add("cherry");  //duplicates are mote allowed 
whats teh internal prblm 

Integrer i1=new Integer(10);
Integr i2=new Integer(10);

Integer i3=20;
Integer i4=20

String s1=new Sting("java");
String s2=new Sting("java");
s3=s1;
s4=s2;
can i get the duplucets.  

jvm should not create the object address whenever we are with set or hash -----why ?
why we need to ovveride the set when working with hash?

emp1= new Emoplioyee(1,"java");
emp2=new Emoplioyee(2,"java");

now for the above how the ovverideing the method 

public  int hashcode(){
      //retrun objects.hash(empId);
      return empId+1;
}


class call  done 
collection pract hashcode
git hub liitle rfeview
prjct search best of best
...................................

Equals method is used to comapre the content when we are working with litrals and string class but when we work with object class and collection it has differnt meaning it check the reference address 

String s1 = "Hello";
String s2 = "Hello";

System.out.println(s1 == s2);       // true ✅ (same reference from String pool)
System.out.println(s1.equals(s2));  // true ✅ (same content)

   Student s1 = new Student("Pranav");
        Student s2 = new Student("Pranav");

        System.out.println(s1.equals(s2)); // false (if we dont ovveride the equals methodd)




















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































